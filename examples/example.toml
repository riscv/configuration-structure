# TOML supports comments
# hexadecimal: 0xdef or with underscores in them: 0xdead_beef
# octal: 0o567
# binary: 0b101
# Whitespace is allowed but optional.

[configuration]
  [[configuration.harts]]
    hartId = { single = [ 0 ] }
    [[configuration.harts.extensions]]

      [configuration.harts.extensions.debug]
        [[configuration.harts.extensions.debug.trigger]]
          index = { range = [ { start = 0, length = 3 } ] }
          hitSupported = false
          [[configuration.harts.extensions.debug.trigger.mcontrol]]
            maskmax = 4
            selectSupported = "data"
            timingSupported = "before"
            addressMatch = false
            dataMatch = false
            sizeAny = true
            size8 = false
            size16 = false
            size32 = false
            size64 = false
            size80 = false
            size96 = false
            size112 = false
            size128 = false
            chainSupported = false
            matchEqual = true
            matchNapot = true
            matchGreaterEqual = true
            matchLess = true
            matchLowMask = false
            matchHighMask = false
            matchNotEqual = false
            matchNotNapot = false
            matchNotLowMask = false
            matchNotHighMask = false
            executeSupported = true
            storeSupported = true
            loadSupported = true


          [configuration.harts.extensions.debug.trigger.actionSupported]
            breakpointExceptionSupported = true
            debugModeSupported = true
            external0Supported = false
            external1Supported = false
        [[configuration.harts.extensions.debug.trigger]]
          index = { single = [ 4 ] }
          hitSupported = false
          [[configuration.harts.extensions.debug.trigger.mcontrol]]
            maskmax = 4
            selectSupported = "address"
            timingSupported = "before"
            addressMatch = false
            dataMatch = true
            sizeAny = true
            size8 = false
            size16 = false
            size32 = false
            size64 = false
            size80 = false
            size96 = false
            size112 = false
            size128 = false
            chainSupported = false
            matchEqual = true
            matchNapot = true
            matchGreaterEqual = true
            matchLess = true
            matchLowMask = false
            matchHighMask = false
            matchNotEqual = false
            matchNotNapot = false
            matchNotLowMask = false
            matchNotHighMask = false
            executeSupported = true
            storeSupported = true
            loadSupported = true


          [configuration.harts.extensions.debug.trigger.actionSupported]
            breakpointExceptionSupported = true
            debugModeSupported = true
            external0Supported = false
            external1Supported = false

  [[configuration.harts]]
    hartId = { range = [ { start = 1, length = 4 } ] }
    [[configuration.harts.extensions]]

      [configuration.harts.extensions.debug]
        [[configuration.harts.extensions.debug.trigger]]
          index = { single = [ 4 ] }
          hitSupported = false
          [[configuration.harts.extensions.debug.trigger.mcontrol]]
            maskmax = 4
            selectSupported = "data"
            timingSupported = "before"
            addressMatch = false
            dataMatch = false
            sizeAny = true
            size8 = false
            size16 = false
            size32 = false
            size64 = false
            size80 = false
            size96 = false
            size112 = false
            size128 = false
            chainSupported = false
            matchEqual = true
            matchNapot = true
            matchGreaterEqual = true
            matchLess = true
            matchLowMask = false
            matchHighMask = false
            matchNotEqual = false
            matchNotNapot = false
            matchNotLowMask = false
            matchNotHighMask = false
            executeSupported = true
            storeSupported = true
            loadSupported = true


          [configuration.harts.extensions.debug.trigger.actionSupported]
            breakpointExceptionSupported = true
            debugModeSupported = true
            external0Supported = false
            external1Supported = false

  [[configuration.harts]]
    hartId = { single = [ 0, 2, 4 ] }
    isa = { riscv32 = true, riscv64 = true }

  [[configuration.harts]]
    hartId = { single = [ 1, 3 ] }
    isa = { riscv64 = true }

  [[configuration.harts]]
    hartId = { range = [ { start = 1, length = 4 } ] }
    [[configuration.harts.extensions]]

      [configuration.harts.extensions.zk]
        zbkbSupported = true
        zbkcSupported = false
        zbkxSupported = true
        zkndSupported = true
        zkneSupported = true
        zknhSupported = true
        zksedSupported = false
        zkshSupported = false
        zktSupported = false
        zkrSupported = true

  [[configuration.debugModule]]
    dmiAddress = 0
    [[configuration.debugModule.accessRegisterCommand]]
      aarsize32Supported = false
      aarsize64Supported = true
      aarsize128Supported = true
      aarpostincrementSupported = false
      postexecSupported = true
      regno = { range = [ { start = 4096, length = 31 } ] }


    [configuration.debugModule.secondary]
      connectedHarts = { range = [ { start = 0, length = 4 } ] }
      hartresetSupported = false
      hartselLen = 0
      keepaliveSupported = false
      resethaltreqSuported = false
      relaxedprivSupported = false
      autoexecprogbuf = [  ]
      autoexecdata = [  ]
