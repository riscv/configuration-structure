{
    // Config structure group owns this part
    range: {
        start: {required: true, type: "Number", code: 1},
        length: {required: true, type: "Number", code: 2}
    },
    flexible_range: {
        single: {type: "Number", repeatable: true, code: 1},
        // zip start, end to get a list of ranges
        start: {type: "Number", repeatable: true, code: 2},
        end: {type: "Number", repeatable: true, code: 3}
    },
    hart: {
        hartid: {required: true, type: "flexible_range", code: 1},
        debug: {type: "debug", code: 2},
        isa: {type: "isa", code: 3},
        privileged: {type: "privileged", code: 4},
        clic: {type: "clic", code: 5},
        fastInt: {type: "fastInt", code: 6}
    },
    tuple: {
        value: {required: true, type: "Number", code: 1},
        mask: {required: true, type: "Number", code: 2}
    },
    triple: {
        low: {required: true, type: "Number", code: 1},
        high: {required: true, type: "Number", code: 2},
        mask: {required: true, type: "Number", code: 3}
    },
    possible_values: {
        tuple: {repeatable: true, type: "tuple", code: 1},
        triple: {repeatable: true, type: "triple", code: 2},
    },
    configuration: {
        harts: {repeatable: true, type: "hart", code: 1},
        debug_module: {repeatable: true, type: "debug_module", code: 16},
        trace_module: {type: "trace_module", code: 18},
        physical_memory: {repeatable: true, type: "physical_memory", code: 19},
    },

    // Debug Group owns this part
    debug_trigger_mcontrol: {
        maskmax: {required: true, type: "Int6", code: 1},
        hit: {required: true, type: "Boolean", code: 2},
        address_match: {required: true, type: "Boolean", code: 3},
        data_match: {required: true, type: "Boolean", code: 4},
        timing_before: {required: true, type: "Boolean", code: 5},
        timing_after: {required: true, type: "Boolean", code: 6},
        size_any: {required: true, type: "Boolean", code: 7},
        size_s8: {required: true, type: "Boolean", code: 8},
        size_s16: {required: true, type: "Boolean", code: 9},
        size_s32: {required: true, type: "Boolean", code: 10},
        size_s64: {required: true, type: "Boolean", code: 11},
        size_s80: {required: true, type: "Boolean", code: 12},
        size_s96: {required: true, type: "Boolean", code: 13},
        size_s112: {required: true, type: "Boolean", code: 14},
        size_s128: {required: true, type: "Boolean", code: 15},
        action_mmode: {required: true, type: "Boolean", code: 16},
        action_dmode: {required: true, type: "Boolean", code: 17},
        chain: {required: true, type: "Boolean", code: 18},
        match_equal: {required: true, type: "Boolean", code: 19},
        match_napot: {required: true, type: "Boolean", code: 20},
        match_greater_equal: {required: true, type: "Boolean", code: 21},
        match_less: {required: true, type: "Boolean", code: 22},
        match_low_mask: {required: true, type: "Boolean", code: 23},
        match_high_mask: {required: true, type: "Boolean", code: 24},
        match_not_equal: {required: true, type: "Boolean", code: 25},
        match_not_napot: {required: true, type: "Boolean", code: 26},
        match_not_low_mask: {required: true, type: "Boolean", code: 27},
        match_not_high_mask: {required: true, type: "Boolean", code: 28},
        m: {required: true, type: "Boolean", code: 29},
        s: {required: true, type: "Boolean", code: 30},
        u: {required: true, type: "Boolean", code: 31},
        execute: {required: true, type: "Boolean", code: 32},
        store: {required: true, type: "Boolean", code: 33},
        load: {required: true, type: "Boolean", code: 34}
    },
    debug_trigger_mcontrol_compact: {
        bitfield: {required: true, type: "Number", code: 1}
    },
    debug_trigger: {
        index: {required: true, type: "flexible_range", code: 1},
        mcontrol: {type: "debug_trigger_mcontrol", repeatable: true, code: 2},
        mcontrolCompact: {type: "debug_trigger_mcontrol_compact", repeatable: true, code: 3},
    },

    access_register_command: {
        aarsize32: {required: true, type: "Boolean", code: 1},
        aarsize64: {required: true, type: "Boolean", code: 2},
        aarsize128: {required: true, type: "Boolean", code: 3},
        aarpostincrement_supported: {required: true, type: "Boolean", code: 4},
        postexec_supported: {required: true, type: "Boolean", code: 5},
        regno: {required: true, type: "flexible_range", code: 6}
    },
    access_memory_command: {
        aamvirtual0: {required: true, type: "Boolean", code: 100},
        aamvirtual1: {required: true, type: "Boolean", code: 101},
        aamsize8: {required: true, type: "Boolean", code: 102},
        aamsize16: {required: true, type: "Boolean", code: 103},
        aamsize32: {required: true, type: "Boolean", code: 104},
        aamsize64: {required: true, type: "Boolean", code: 105},
        aamsize128: {required: true, type: "Boolean", code: 106},
        aampostincrement_supported: {required: true, type: "Boolean", code: 107},
        write_supported: {required: true, type: "Boolean", code: 108},
        read_supported: {required: true, type: "Boolean", code: 109},
    },
    abstract_command: {
        access_register: {type: "access_register_command", repeatable: true, code: 1},
        quick_access: {type: "Boolean", repeatable: true, code: 2},
        access_memory: {type: "access_memory_command", repeatable: true, code: 3},
    },

    debug_module: {
        index: {type: "Number", code: 1},
        abstract: {type: "abstract_command", code: 2},
        connected_harts: {type: "flexible_range", code: 3},
    },
    debug: {
        trigger: {repeatable: true, type: "debug_trigger", code: 1}
    },

    // ISA Group owns this part
    isa: {
        "RISCV32": {type: "Boolean", code: 1},
        "RISCV64": {type: "Boolean", code: 2},
        "RISCV128": {type: "Boolean", code: 3},
    },

    // Privileged Group owns this part
    priv_modes: {
        "U": {type: "Boolean", code: 1, required: true},
        "M": {type: "Boolean", code: 2, required: true},
        "S": {type: "Boolean", code: 3, required: true}
    },
    priv_satps: {
        "SV32": {type: "Boolean", code: 1, required: true},
        "SV39": {type: "Boolean", code: 2, required: true},
        "SV48": {type: "Boolean", code: 3, required: true},
        "SV57": {type: "Boolean", code: 4, required: true},
        "SV64": {type: "Boolean", code: 5, required: true}
    },
    privileged: {
        modes: {type: "priv_modes", code: 1},
        satps: {type: "priv_satps", code: 2},
        epmp: {type: "Boolean", code: 3},
    },

    // Fast Interrupt Group owns this part
    clic: {
        m_time_register_address: {type: "Number", code: 1},
        m_time_compare_register_address: {type: "Number", code: 2},
    },
    fast_interrupt_module: {
        index: {repeatable:true, type: "range", code: 1},
        connected_harts: {repeatable:true, type: "range", code: 2},
    },

    // Trace Group owns this part
    trace_module: {
        branchPredictorEntries: {type: "Number", code: 1},
        jumpTargetCacheEntries: {type: "Number", code: 2},
        contextBusWidth: {type: "Number", code: 3},
    },

    // Who owns this?
    physical_memory: {
        address: {required: true, repeatable: true, type: "range", code: 1},
        cacheable: {type: "Boolean", code: 2},
        lr_sc_supported: {type: "Boolean", code: 3},
    },

    fastInt: {
        mModeTimeRegAddr: {type: "Number", code: 1},
        mModeTimeCompRegAddr: {type: "Number", code: 2}
    }
}
