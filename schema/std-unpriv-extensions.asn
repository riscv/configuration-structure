M-Extension -- M: Integer Multiplication and Division
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS M;

    M ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- M-Extension

A-Extension -- A: Atomic Memory Operations
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS A;

    A ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- A-Extension

F-Extension -- F: Floating-Point, Single-Precision.  Implies Zicsr
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS F;

    F ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- F-Extension

D-Extension -- D: Floating-Point, Double-Precision.  Implies F
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS D;

    D ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- D-Extension

Q-Extension -- Q: Quad-Precision Floating-Point.  Implies D
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Q;

    Q ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Q-Extension

L-Extension -- L: Decimal Floating-Point
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS L;

    L ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- L-Extension

C-Extension -- C: 16-bit Compressed Instructions
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS C;

    C ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- C-Extension

B-Extension -- B: Bit Manipulation
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS B;

    B ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- B-Extension

J-Extension -- J: Dynamic Languages
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS J;

    J ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- J-Extension

T-Extension -- T: Transactional Memory
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS T;

    T ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- T-Extension

P-Extension -- P: Packed-SIMD
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS P;

    P ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- P-Extension

V-Extension -- V: Vector Computation.  Implies F and D
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS V;

    V ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- V-Extension

N-Extension -- N: User-Level Interrupts
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS N;

    N ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- N-Extension

Zic64b-Extension -- Zic64b: Cache-Block Management of 64-byte, naturally aligned cache blocks
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zic64b;

    Zic64b ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zic64b-Extension

Zicbom-Extension -- Zicbom: Cache-Block Management
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zicbom;

    Zicbom ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zicbom-Extension

Zicbop-Extension -- Zicbop: Cache-Block Prefetching
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zicbop;

    Zicbop ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zicbop-Extension

Zicboz-Extension -- Zicboz: Cache-Block Zeroing
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zicboz;

    Zicboz ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zicboz-Extension

Zicntr-Extension -- Zicntr: Basic Performance Counters
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zicntr;

    Zicntr ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zicntr-Extension

Zicsr-Extension -- Zicsr: Control and Status Register Access
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zicsr;

    Zicsr ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zicsr-Extension

Zifencei-Extension -- Zifencei: Instruction-Fetch Synchronization
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zifencei;

    Zifencei ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zifencei-Extension

Zihintpause-Extension -- Zihintpause: Pause in spins loops to save power
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zihintpause;

    Zihintpause ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zihintpause-Extension

Zihpm-Extension -- Zihpm: Hardware Performance Counters
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zihpm;

    Zihpm ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zihpm-Extension

Zmmul-Extension -- Zmmul: Multiplication Subset of the M extension
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zmmul;

    Zmmul ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zmmul-Extension

Zaamo-Extension -- Zaamo
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zaamo;

    Zaamo ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zaamo-Extension

Zalrsc-Extension -- Zalrsc: Load/Store Conditional Atomics
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zalrsc;

    Zalrsc ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zalrsc-Extension

Zam-Extension -- Zam: Misaligned Atomics.  Implies A
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zam;

    Zam ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zam-Extension

Zfh-Extension -- Zfh: Floating-Point, 16-bit Half-Precision (compliant with the IEEE 754-2008 arithmetic standard). Implies F.
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zfh;

    Zfh ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zfh-Extension

Zhinx-Extension -- Zhinx: Floating-Point, 16-bit Half-Precision in Integer Registers X.  Implies Zfinx
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zhinx;

    Zhinx ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zhinx-Extension

Zhinxmin-Extension -- Zhinxmin: Floating-Point, Subset of Zhinx for Minimal Support of 16-bit Half-Precision in Integer Registers X.  Implies Zfinx
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zhinxmin;

    Zhinxmin ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zhinxmin-Extension

Zfhmin-Extension -- Zfhmin: Floating-Point, Subset of Zfh for Minimal Support of 16-bit Half-Precision. Implies F.
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zfhmin;

    Zfhmin ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zfhmin-Extension

Zfinx-Extension -- Zfinx: Floating-Point, Single-Precision in Integer Registers X
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zfinx;

    Zfinx ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zfinx-Extension

Zdinx-Extension -- Zdinx: Floating-Point, Double-Precision in Integer Registers X.  Implies Zfinx
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zdinx;

    Zdinx ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zdinx-Extension

Zba-Extension -- Zba: Address Computation
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zba;

    Zba ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zba-Extension

Zbb-Extension -- Zbb: Basic Bit manipulation
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zbb;

    Zbb ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zbb-Extension

Zbc-Extension -- Zbc: Carryless Multiplication
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zbc;

    Zbc ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zbc-Extension

Zbkb-Extension -- Zbkb: Bit Manipulation for Cryptography
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zbkb;

    Zbkb ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zbkb-Extension

Zbkc-Extension -- Zbkc: Carryless Multiplication for Cryptography
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zbkc;

    Zbkc ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zbkc-Extension

Zbkx-Extension -- Zbkx: Crossbar permutation
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zbkx;

    Zbkx ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zbkx-Extension

Zbs-Extension -- Zbs: Single Bit Manipulation
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zbs;

    Zbs ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zbs-Extension

Zve32d-Extension -- Zve32d: Embedded Vector Computation, FP32, 32 Minimum VLEN.  Implies D or Zdinx.
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zve32d;

    Zve32d ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zve32d-Extension

Zve32f-Extension -- Zve32f: Embedded Vector Computation, FP32, 32 Minimum VLEN.  Implies F or Zfinx.
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zve32f;

    Zve32f ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zve32f-Extension

Zve32x-Extension -- Zve32x: Embedded Vector Computation, no FP, 32 Minimum VLEN
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zve32x;

    Zve32x ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zve32x-Extension

Zve64d-Extension -- Zve64d: Embedded Vector Computation, FP32, 64 Minimum VLEN.  Implies D or Zdinx.
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zve64d;

    Zve64d ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zve64d-Extension

Zve64f-Extension -- Zve64f: Embedded Vector Computation, FP32, 64 Minimum VLEN.  Implies F or Zfinx.
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zve64f;

    Zve64f ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zve64f-Extension

Zve64x-Extension -- Zve64x: Embedded Vector Computation, no FP, 64 Minimum VLEN
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zve64x;

    Zve64x ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zve64x-Extension

Zk-Extension -- Zk: Standard Scalar Cryptography.  Implies Zkn, Zkr, and Zkt
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zk;

    Zk ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zk-Extension

Zkn-Extension -- Zkn: NIST Cryptography, Implies Zbkb, Zbkc, Zbkx, Zkne, Zknd, and Zknh
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zkn;

    Zkn ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zkn-Extension

Zknd-Extension -- Zknd: NIST Suite: AES Decryption
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zknd;

    Zknd ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zknd-Extension

Zkne-Extension -- Zkne: NIST Suite: AES Encryption
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zkne;

    Zkne ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zkne-Extension

Zknh-Extension -- Zknh: NIST Suite: SHA2 Hashing
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zknh;

    Zknh ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zknh-Extension

Zkr-Extension -- Zkr: Entropy Source Extension
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zkr;

    Zkr ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zkr-Extension

Zks-Extension -- Zks: ShangMi Algorithm Cryptography.  Implies Zbkb, Zbkc, Zbkx, Zksed, and Zksh.
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zks;

    Zks ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zks-Extension

Zksed-Extension -- Zksed: ShangMi Suite: SM4 Block Cipher
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zksed;

    Zksed ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zksed-Extension

Zksh-Extension -- Zksh: ShangMi Suite: SM3 Hashing
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zksh;

    Zksh ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zksh-Extension

Zkt-Extension -- Zkt: Data Independent Execution Latency
DEFINITIONS
    AUTOMATIC TAGS ::=
BEGIN
    IMPORTS Version FROM Helper-Types;
    EXPORTS Zkt;

    Zkt ::= SEQUENCE {
        version Version OPTIONAL,
        ...
    }

END -- Zkt-Extension

