Helper-Types
DEFINITIONS
   AUTOMATIC TAGS ::=
BEGIN
   EXPORTS FlexibleRange, FlexibleRange4, FlexibleRange8, FlexibleRange16,
           Range, Tuple, Triple, PossibleValues;

   -- 2-bit integer
   Integer4 ::= INTEGER (0..3)

   -- 3-bit integer
   Integer8 ::= INTEGER (0..7)

   -- 4-bit integer
   Integer16 ::= INTEGER (0..15)

   -- 2-bit integer of range [0..3]
   Range4 ::= SEQUENCE {
      start Integer4,
      length Integer4
   }
   -- 3-bit integer of range [0..7]
   Range8 ::= SEQUENCE {
      start Integer8,
      length Integer8
   }
   -- 4-bit integer of range [0..15]
   Range16 ::= SEQUENCE {
      start Integer16,
      length Integer16
   }
   -- Any size of interger
   Range ::= SEQUENCE {
      start INTEGER,
      length INTEGER
   }

   -- 2-bit flexible range [0..3]
   FlexibleRange4 ::= SEQUENCE {
      -- The count of single sequence [1..4] which is
      -- a 2-bit count
      single SEQUENCE SIZE(1..4) OF Integer4 OPTIONAL,
      -- The intenger range is [0..3]
      range SEQUENCE OF Range4 OPTIONAL
   }

   -- 3-bit flexible range [0..7]
   FlexibleRange8 ::= SEQUENCE {
      -- The count of single sequence [1..8] which is 
      -- a 3-bit count
      single SEQUENCE SIZE(1..8) OF Integer8 OPTIONAL,
      -- The intenger range is [0..7]
      range SEQUENCE OF Range8 OPTIONAL
   }

   -- 4-bit flexible range [0..15]
   FlexibleRange16 ::= SEQUENCE {
      -- The count of single sequence [1..16] which is
      -- a 4-bit count
      single SEQUENCE SIZE(1..16) OF Integer8 OPTIONAL,
      -- The intenger range is [0..15]
      range SEQUENCE OF Range16 OPTIONAL
   }
   -- Any size of flexible range
   FlexibleRange ::= SEQUENCE {
      single SEQUENCE OF INTEGER OPTIONAL,
      range SEQUENCE OF Range OPTIONAL
   }
   -- Value/Mask tuple
   Tuple ::= SEQUENCE {
      value INTEGER,
      mask INTEGER
   }
   -- Low/High with mask applied
   Triple ::= SEQUENCE {
      low INTEGER,
      high INTEGER,
      mask INTEGER
   }
   -- Possible value formats
   PossibleValues ::= SEQUENCE {
      tuple SEQUENCE OF Tuple OPTIONAL,
      triple SEQUENCE OF Triple OPTIONAL,
      ...
   }
END